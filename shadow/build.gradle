plugins {
    id 'com.android.library'
}

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

}

dependencies {
    implementation 'androidx.annotation:annotation:1.2.0'

    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}

android.libraryVariants.all { variant ->
    Task javaCompilerTask = variant.javaCompiler
    javaCompilerTask.doLast {
        javaCompilerTask.getOutputs().files.each { classDir ->
            println("javaCompilerTask.outputs=$classDir")
            removeClass(classDir, 'android.telephony.TelephonyManager', 'android.telephony.TelephonyManager$CellInfoCallback', 'android.net.wifi.IWifiManager', 'android.net.wifi.WifiManager', 'android.net.wifi.WifiManager$LocalOnlyHotspotCallback', 'android.net.wifi.WifiManager$LocalOnlyHotspotReservation')
        }
    }
}


def removeClass(File classDir, String... classes) {
    if (classes == null || classes.size() == 0) {
        return
    }

    for (String className : classes) {
        char dot = '.'
        def classNamePath = className.replace(dot, File.separatorChar) + ".class"
        File classFile = new File(classDir, classNamePath)
        println("className=$className, classNamePath=$classNamePath")

        def result = classFile.delete()
        println("${result ? "success" : "fail"} delete className=${className} in classDir=$classDir")
    }
}
